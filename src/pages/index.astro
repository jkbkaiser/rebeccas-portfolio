---
import { ViewTransitions } from "astro:transitions";
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

import "../styles/global.css";

const pageTitle = "Rebecca's Portfolio";
const images = import.meta.glob<{ default: ImageMetadata }>(
    "/src/assets/images/*.{jpeg,jpg,png,gif}",
);
const imgPaths = Object.keys(images);
---

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <title>{pageTitle}</title>
        <style>
            .container {
                margin-top: 3%;
                min-height: 50%;
                display: flex;
                flex-direction: row;
                justify-content: space-between;
            }
            .header {
                margin-left: 3%;
                min-width: 50%;
                min-height: 100%;
            }
            h1 {
                line-height: 0.9;
                margin: 0;
                font-size: 10vh;
                color: #7b674d;
                width: 0cm;
            }
            .navigation {
                margin-right: 3%;
                display: flex;
                flex-direction: column;
                text-align: end;
            }
            a {
                color: black;
                font-size: 5vh;
                font-family: "Bebas";
                text-decoration: none;
            }
            p {
                padding: 0;
                margin: 0;
                margin-top: 10px;
                transition: transform 1.5s ease-out;
            }
            p:hover {
                font-weight: 1000;
            }

            body {
                position: fixed;
                width: 100%;
                height: 100%;
                left: 0;
                top: 0;
                padding: 0;
                margin: 0;
            }

            .hover-underline-animation {
                display: inline-block;
                position: relative;
            }

            .hover-underline-animation::after {
                content: "";
                position: absolute;
                width: 100%;
                transform: scaleX(0);
                height: 2px;
                bottom: 0;
                left: 0;
                background-color: #000000;
                transform-origin: bottom right;
                transition: transform 0.5s ease-out;
            }

            .hover-underline-animation:hover::after {
                transform: scaleX(1);
                transform-origin: bottom left;
            }
        </style>
        <ViewTransitions />
    </head>
    <body>
        {imgPaths.map((path, index) => {
            let style = "\
                position: absolute;\
                top: 0;\
                bottom:0;\
                height: 100%;\
                width: 100%;\
                margin: 0%;\
                object-fit: cover;\
                opacity: 0;\
            "
            return <Image
                id=`background-img-${index}`
                src={images[path]()}
                alt=`Slide ${index}`
                style={style}
                quality={100}
                loading="lazy"
            />
        })}
        <div class="container">
            <div class="header" transition:animate="fade">
                <h1>REBECCA ANAIS KAISER</h1>
            </div>
            <div class="navigation" transition:animate="fade">
                <a href="/galleries/"
                    ><p class="hover-underline-animation">Galleries</p></a
                >
                <a href="/about/"
                    ><p class="hover-underline-animation">About</p></a
                >
                <a href="/contact/"
                    ><p class="hover-underline-animation">Contact</p></a
                >
            </div>
        </div>
    </body>

    <script>
        let currentSlideShowImg = 0;
        const numImages = document.getElementsByTagName('img').length;
        let initialImg = document.getElementById(`background-img-${currentSlideShowImg}`);
        if (initialImg !== null) {
            initialImg.style.opacity = "100%";
        }

        function myCallback() {
            let oldImg = document.getElementById(`background-img-${currentSlideShowImg}`);
            if (oldImg !== null) {
                oldImg.style.opacity = "0%";
            }
            currentSlideShowImg = (currentSlideShowImg + 1) % numImages;
            let newImg = document.getElementById(`background-img-${currentSlideShowImg}`);
            if (newImg !== null) {
                newImg.style.opacity = "100%";
            }
        }
        window.setInterval(myCallback, 3000);
    </script>
</html>
